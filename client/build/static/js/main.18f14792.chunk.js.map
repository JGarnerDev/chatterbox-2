{"version":3,"sources":["store/reducer.js","store/index.js","routes/user.route.js","routes/nonAuth.route.js","components/Login/Login.js","components/Navigation/NavList.js","components/Navigation/NavDrawer.js","components/Navigation/Navbar.js","components/Message/Message.js","components/Message/Messages.js","components/Input/Input.js","components/Chat/Chat.js","routes/index.js","App.js","index.js"],"names":["reducer","state","action","type","name","payload","user","message","room","roomMessages","rooms","socket","CTX","React","createContext","initialState","undefined","sendMessage","emit","Provider","children","useReducer","rootReducer","chat","dispatch","io","on","value","newUser","UserRoute","Component","component","rest","render","props","to","pathname","from","location","NonAuthRoute","baseUrl","Login","useContext","useState","userName","setUsername","error","setError","isValid","a","axios","get","then","res","data","currentUsers","indexOf","useEffect","setTimeout","Container","id","data-testid","Paper","TextField","label","variant","onChange","e","target","Button","onClick","size","Alert","severity","AlertTitle","NavList","setOpenDrawer","setActiveRoom","roomNames","Object","keys","List","map","i","ListItem","key","ListItemIcon","Mail","ListItemText","primary","window","reload","ExitToApp","navListItems","NavDrawer","openDrawer","Fragment","Menu","Drawer","anchor","open","onClose","items","Navbar","activeRoom","Toolbar","Message","messageFrom","currentUser","length","slice","className","AccountCircle","Messages","messages","messagesBottomRef","useRef","current","scrollIntoView","block","behavior","ref","Input","toggleSpin","newMessage","setNewMessage","onKeyDown","preventDefault","Fab","aria-label","Chat","Routes","path","exact","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.18f14792.chunk.js","sourcesContent":["// This chat application is fairly simple, so state will only contain values per each room, consisting of room name and array of messages\r\n\r\nexport default function reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      const name = action.payload;\r\n      return {\r\n        ...state,\r\n        user: name,\r\n      };\r\n    case \"NEW_MESSAGE\":\r\n      const { user, message, room } = action.payload;\r\n      let roomMessages = state.rooms[room];\r\n      return {\r\n        // return the previous state\r\n        ...state,\r\n        rooms: {\r\n          ...state.rooms,\r\n          [room]: [\r\n            // ...return all previous messages held in the room...\r\n            ...roomMessages,\r\n            // ...add the new message\r\n            { user, message },\r\n          ],\r\n        },\r\n      };\r\n    default:\r\n      // Preserve the state in every other case\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport rootReducer from \"./reducer\";\r\n\r\n// Higher order component to wrap our App child components in, providing all components with a memory\r\n//   Advantages:\r\n//      - No props drilling\r\n//      - State is global; child components can affect change values used by parents\r\n\r\n// Initialization of the context provider, which will be used as a JSX element\r\nexport const CTX = React.createContext();\r\n\r\n// We need an initial state for our reducer, values dependent on what we want on arrival to site\r\n\r\nconst initialState = {\r\n  user: undefined,\r\n  rooms: { \"Main chat\": [], \"Side chat\": [] },\r\n};\r\n\r\nlet socket;\r\nlet user;\r\n\r\n// action creators\r\n\r\nfunction sendMessage(user, message, room) {\r\n  if (!message) return;\r\n  socket.emit(\"message\", { user, message, room });\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [chat, dispatch] = React.useReducer(rootReducer, initialState);\r\n\r\n  function newUser(name) {\r\n    dispatch({ type: \"LOGIN\", payload: name });\r\n    socket.emit(\"join\", { name });\r\n    sendMessage(\"ChatterBox\", `User ${name} has joined!`, \"Main chat\");\r\n  }\r\n\r\n  // if there isn't a socket yet...\r\n  if (!socket) {\r\n    // ...make it, listening on our server\r\n    socket = io(\"https://jg-chatterbox-server.herokuapp.com/\");\r\n\r\n    // whenever our socket revieces a 'message' event, dispatch the data attached to the event to our reducer via action creator\r\n    socket.on(\"message\", (message) => {\r\n      dispatch({ type: \"NEW_MESSAGE\", payload: message });\r\n    });\r\n\r\n    socket.on(\"disconnect\", ({ name }) => {\r\n      const user = \"ChatterBox\";\r\n      const message = `User ${name} has left!`;\r\n      const room = \"Main chat\";\r\n      const leaveMessage = { user, message, room };\r\n      dispatch({ type: \"NEW_MESSAGE\", payload: leaveMessage });\r\n    });\r\n  }\r\n\r\n  // children is props.children, which will be App and all components within\r\n  return (\r\n    <CTX.Provider value={{ user, chat, newUser, sendMessage }}>\r\n      {children}\r\n    </CTX.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst UserRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return rest.user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst NonAuthRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return rest.user ? (\r\n          <Redirect\r\n            to={{ pathname: \"/chat\", state: { from: props.location } }}\r\n          />\r\n        ) : (\r\n          <Component {...props} />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NonAuthRoute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { Container, Paper, TextField, Button } from \"@material-ui/core\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\n\r\nimport { CTX } from \"../../store\";\r\n\r\nconst baseUrl = \"https://jg-chatterbox-server.herokuapp.com\";\r\n\r\nexport default function Login() {\r\n  const { newUser } = React.useContext(CTX);\r\n  const [userName, setUsername] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      setTimeout(() => setError(null), 3000);\r\n    }\r\n  }, [error]);\r\n\r\n  async function isValid(userName) {\r\n    if (!userName) {\r\n      setError({ type: \"No Name\", message: \"You have to pick a name!\" });\r\n      return;\r\n    }\r\n    const currentUsers = await axios\r\n\r\n      .get(`${baseUrl}/currentusers`)\r\n      .then((res) => {\r\n        return res.data;\r\n      });\r\n\r\n    const isUnique = (await currentUsers.indexOf(userName)) === -1;\r\n    if (!isUnique) {\r\n      setError({\r\n        type: \"Name isn't unique\",\r\n        message: \"Someone picked that name already!\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    newUser(userName);\r\n  }\r\n\r\n  return (\r\n    <Container id=\"Login\" data-testid=\"login-component\">\r\n      <Paper id=\"login-wrapper\" data-testid=\"login-wrapper\">\r\n        <div id=\"login-form\" data-testid=\"login-form\">\r\n          <TextField\r\n            label=\"Pick a name!\"\r\n            variant=\"outlined\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            data-testid=\"name-input\"\r\n          />\r\n\r\n          <Button\r\n            onClick={async () => {\r\n              await isValid(userName);\r\n            }}\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            id=\"form-button\"\r\n            data-testid=\"login-button\"\r\n          >\r\n            Get in there!\r\n          </Button>\r\n        </div>\r\n        <div id=\"login-feedback\" data-testid=\"login-feedback\">\r\n          {error ? (\r\n            <Alert severity=\"error\" id=\"error\" data-testid=\"feedback-error\">\r\n              <AlertTitle id=\"error-title\">{error.type}</AlertTitle>\r\n              {error.message}\r\n            </Alert>\r\n          ) : null}\r\n        </div>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { CTX } from \"../../store\";\r\n\r\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport { Mail, ExitToApp } from \"@material-ui/icons\";\r\n\r\nexport default function NavList({ setOpenDrawer, setActiveRoom }) {\r\n  const { chat } = React.useContext(CTX);\r\n  const roomNames = Object.keys(chat.rooms);\r\n  return (\r\n    <List>\r\n      {roomNames\r\n        ? roomNames.map((room, i) => {\r\n            return (\r\n              <ListItem\r\n                onClick={() => {\r\n                  setOpenDrawer(false);\r\n                  setActiveRoom(room);\r\n                }}\r\n                key={i}\r\n              >\r\n                <ListItemIcon>\r\n                  <Mail />\r\n                </ListItemIcon>\r\n                <ListItemText primary={room} />\r\n              </ListItem>\r\n            );\r\n          })\r\n        : null}\r\n      <hr />\r\n      <ListItem\r\n        onClick={() => {\r\n          window.location.reload();\r\n        }}\r\n      >\r\n        <ListItemIcon>\r\n          <ExitToApp />\r\n        </ListItemIcon>\r\n\r\n        <ListItemText primary={\"Logout\"} />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport NavList from \"./NavList\";\r\n\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport { Menu } from \"@material-ui/icons\";\r\n\r\nconst navListItems = [\"Ass\", \"Butt\"];\r\n\r\nexport default function NavDrawer({ setActiveRoom }) {\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Menu onClick={() => setOpenDrawer(true)} id=\"button\" />\r\n\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={openDrawer}\r\n        onClose={() => setOpenDrawer(false)}\r\n      >\r\n        <NavList\r\n          items={navListItems}\r\n          setOpenDrawer={setOpenDrawer}\r\n          setActiveRoom={setActiveRoom}\r\n        />\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Toolbar } from \"@material-ui/core\";\r\n\r\nimport NavDrawer from \"./NavDrawer\";\r\n\r\nexport default function Navbar({ activeRoom, setActiveRoom }) {\r\n  return (\r\n    <Toolbar id=\"Navbar\">\r\n      <h2 id=\"Navbar-roomName\">{activeRoom}</h2>\r\n      <NavDrawer setActiveRoom={setActiveRoom} />\r\n    </Toolbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { CTX } from \"../../store\";\r\n\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\n\r\nexport default function Message({ messageFrom, message }) {\r\n  const { chat } = React.useContext(CTX);\r\n\r\n  const currentUser = messageFrom === chat.user;\r\n\r\n  if (messageFrom.length > 25) {\r\n    messageFrom = messageFrom.slice(0, 25) + \"...\";\r\n  }\r\n\r\n  return currentUser ? (\r\n    <div className=\"Message currentUser\">\r\n      <p>{message}</p>\r\n      <h3>\r\n        <AccountCircle className=\"Message-userIcon\" />\r\n        {messageFrom}\r\n      </h3>\r\n    </div>\r\n  ) : (\r\n    <div className=\"Message\">\r\n      <p>{message}</p>\r\n      <h3>\r\n        <AccountCircle className=\"Message-userIcon\" />\r\n        {messageFrom}\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nimport Message from \"./Message\";\r\n\r\nexport default function Messages({ messages }) {\r\n  const messagesBottomRef = useRef(null);\r\n  const scrollToBottom = () => {\r\n    messagesBottomRef.current.scrollIntoView({\r\n      block: \"end\",\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  useEffect(scrollToBottom, [messages]);\r\n\r\n  return (\r\n    <div id=\"Messages\">\r\n      {messages\r\n        ? messages.map(({ user, message }, i) => {\r\n            return <Message messageFrom={user} message={message} key={i} />;\r\n          })\r\n        : null}\r\n      <div ref={messagesBottomRef}></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Fab } from \"@material-ui/core\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\n\r\nexport default function Input({ user, sendMessage, activeRoom }) {\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  let toggleSpin;\r\n  newMessage ? (toggleSpin = \"-spin\") : (toggleSpin = \"\");\r\n\r\n  return (\r\n    <div id=\"Input\">\r\n      <textarea\r\n        type=\"text\"\r\n        variant=\"filled\"\r\n        value={newMessage}\r\n        onChange={(e) => setNewMessage(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n            sendMessage(user, newMessage, activeRoom);\r\n            setNewMessage(\"\");\r\n          }\r\n        }}\r\n        id=\"Input-textfield\"\r\n      />\r\n\r\n      <Fab\r\n        aria-label=\"add\"\r\n        size=\"small\"\r\n        onClick={() => {\r\n          sendMessage(user, newMessage, activeRoom);\r\n          setNewMessage(\"\");\r\n        }}\r\n        id={`Input-sendbutton${toggleSpin}`}\r\n      >\r\n        <NavigationIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { CTX } from \"../../store\";\r\n\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nimport Navbar from \"../Navigation/Navbar\";\r\nimport Messages from \"../Message/Messages\";\r\nimport Input from \"../Input/Input\";\r\n\r\nexport default function Chat() {\r\n  // Reaching into store memory for our chatRooms and the sendMessage action creator\r\n  const { chat, sendMessage } = React.useContext(CTX);\r\n  const user = chat.user;\r\n\r\n  // Because chatRooms are objects, the chat room names will be the object keys\r\n  const roomNames = Object.keys(chat.rooms);\r\n  // We need a way to indicate and handle what current room the user is in, default value will be the first room established in the initialState of store (../store/index.js)\r\n  const [activeRoom, setActiveRoom] = useState(roomNames[0]);\r\n  return (\r\n    <Paper id=\"Chat\">\r\n      <Navbar\r\n        activeRoom={activeRoom}\r\n        rooms={roomNames}\r\n        setActiveRoom={setActiveRoom}\r\n      />\r\n      <Messages messages={chat.rooms[activeRoom]} />\r\n      <Input sendMessage={sendMessage} user={user} activeRoom={activeRoom} />\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { CTX } from \"../store\";\r\n\r\nimport UserRoute from \"./user.route\";\r\nimport NonAuthRoute from \"./nonAuth.route\";\r\n\r\nimport Login from \"../components/Login/Login\";\r\nimport Chat from \"../components/Chat/Chat\";\r\n\r\nconst Routes = () => {\r\n  const { chat } = React.useContext(CTX);\r\n\r\n  let user = chat.user;\r\n\r\n  return (\r\n    <Switch>\r\n      {/* Open Routes  */}\r\n      <NonAuthRoute path=\"/\" exact component={Login} user={user} />\r\n      {/* Private Routes */}\r\n      <UserRoute path=\"/chat\" exact component={Chat} user={user} />\r\n      {/* reroutes any address that the above don't match with, and sends them to the home page */}\r\n      <Route path=\"*\" render={() => <Redirect to=\"/chat\" />} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Provider from \"./store\";\nimport Routes from \"./routes\";\n\nimport \"./styles/main.scss\";\n\nexport default function App() {\n  return (\n    <div id=\"App\">\n      <div id=\"waves\" />\n      <Provider>\n        <Router>\n          <Routes />\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}